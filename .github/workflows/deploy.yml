name: "deploy"
on:
  push:
    tags:
      - "*"
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.19.4
      - uses: pnpm/action-setup@v4
        with:
          version: 8.15.9
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Move Directory
        run: mkdir -p dist && cp -rf .output dist/ && cp -rf docker/* dist/ && cp -rf prisma dist/
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          include-hidden-files: true 
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist
      - name: Deploy to Server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          password: ${{secrets.PASSWORD}}
          target: ${{secrets.TARGET}}
          source: dist/*
          strip_components: 1
          rm: true
      # - name: SSH to Server
      #   uses: appleboy/ssh-action@v1.2.2
      #   with:
      #     host: ${{secrets.HOST}}
      #     username: ${{secrets.USERNAME}}
      #     password: ${{secrets.PASSWORD}}
      #     script: |
      #       cd ${{secrets.TARGET}}
      #       docker compose down
      #       docker compose up -d --build --force-recreate
      - name: Release
        if: github.event_name == 'push' && github.ref == 'refs/tags/v*'
        uses:  softprops/action-gh-release@v2
        with:
          files: dist.tar.gz
